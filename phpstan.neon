parameters:
    level: max
    paths:
        - %currentWorkingDirectory%/packages
        - %currentWorkingDirectory%/src
        - %currentWorkingDirectory%/tests
    ignoreErrors:
        # the # after each ignored error is the number of occurrences

        # false positive, has annotation type above (@todo recheck for possible ignored positives)
        - '#Access to an undefined property PhpParser\\Node::\$name#' # 11
        - '#Parameter \#1 \$node of method Rector\\NodeAnalyzer\\ClassConstAnalyzer::isNames\(\) expects PhpParser\\Node\\Expr\\ClassConstFetch, PhpParser\\Node given#' # 1
        - '#Parameter \#1 \$classNode of method Rector\\NodeTypeResolver\\TypesExtractor\\ConstructorPropertyTypesExtractor::extractFromClassNode\(\) expects PhpParser\\Node\\Stmt\\Class_, PhpParser\\Node\\Stmt\\ClassLike given#' # 1

        # subtype
        - '#Property PhpParser\\Node\\Param::\$type \(PhpParser\\Node\\Name|PhpParser\\Node\\NullableType\|string\|null\) does not accept PhpParser\\Node\\Identifier|PhpParser\\Node\\Name\|PhpParser\\Node\\NullableType#' # 3

        # false positive
        - '#Parameter \#1 \$kernelClass of method Rector\\Symfony\\Bridge\\SymfonyKernelParameterGuard::(ensureKernelClassExists|ensureIsKernelInstance)\(\) expects string, string\|null given#' # 2

        # intentionally incorrect - part of the test
        - '#Parameter \#2 \$codeSamples of class Rector\\RectorDefinition\\RectorDefinition constructor expects array<Rector\\RectorDefinition\\CodeSample>, array<int, stdClass> given#' # 1

        # known values
        - '#Access to an undefined property PHPStan\\PhpDocParser\\Ast\\Node::\$name#' # 2
        - '#Cannot call method getText\(\) on PhpParser\\Comment\\Doc|null#' #3
        - '#Method Rector\\Node\\NodeFactory::createNullConstant\(\) should return PhpParser\\Node\\Expr\\ConstFetch but returns PhpParser\\Node\\Expr#' # 1
        - '#Method Rector\\Node\\NodeFactory::createNamespace\(\) should return PhpParser\\Node\\Stmt\\Namespace_ but returns PhpParser\\Node#' # 1
        - '#Property Rector\\NodeTypeResolver\\NodeVisitor\\NamespaceResolver::\$useNodes \(array<PhpParser\\Node\\Stmt\\Use_>\) does not accept array<PhpParser\\Node>#' # 1
        - '#Parameter \#1 \$node of method Rector\\NodeTypeResolver\\NodeTypeResolver::resolve\(\) expects PhpParser\\Node, PhpParser\\Node\\Expr|string given#' # 3
        - '#Method Rector\\NodeTraverser\\RectorNodeTraverser::getRectors\(\) should return array<Rector\\Contract\\Rector\\RectorInterface> but returns array<PhpParser\\NodeVisitor>#' # 1

        # buggy
        - "#Casting to array<string, string> something that's already array<string, string>#"
        - '#Access to an undefined property PhpParser\\Node\\Expr::\$value#' # 2
        - '#Parameter \#1 \$functionLikeNode of method Rector\\NodeTypeResolver\\TypeContext::getFunctionReflection\(\) expects PhpParser\\Node\\Expr\\Closure\|PhpParser\\Node\\Stmt\\ClassMethod\|PhpParser\\Node\\Stmt\\Function_, PhpParser\\Node\\FunctionLike given#' # 1
        - '#Access to an undefined property PhpParser\\Node\\Expr::\$(name|var)#' # 2
        - '#Cannot cast PhpParser\\Node\\Expr|string to string.#' #26

        # tests or coding standars?
        - '#Constructor of class [\s\S]+ has an unused parameter \$html#' # 2

    excludes_analyse:
        # test files
        - '*tests/Rector/Dynamic/MethodNameReplacerRector/**/SomeClass.php'
        - '*packages/BetterReflection/tests/Reflector/NotLoadedSource/SomeClass.php'

    # clean once upon a time
    reportUnmatchedIgnoredErrors: true
