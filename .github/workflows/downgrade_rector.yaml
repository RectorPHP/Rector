name: Downgrade Rector

on:
    pull_request: null
    push:
        branches:
            - master

jobs:
    # to PHP 7.1
    downgrade_rector:
        runs-on: ubuntu-latest

        strategy:
            fail-fast: false
            matrix:
                directories:
                    - rules/arguments rules/autodiscovery rules/cakephp rules/carbon rules/code-quality rules/code-quality-strict rules/coding-style rules/composer rules/dead-code rules/dead-doc-block rules/defluent rules/dependency-injection rules/doctrine rules/doctrine-code-quality rules/doctrine-gedmo-to-knplabs rules/downgrade-php70  rules/downgrade-php71 rules/downgrade-php72 rules/downgrade-php73 rules/naming rules/nette rules/nette-code-quality rules/nette-kdyby

                    - rules/downgrade-php74 rules/downgrade-php80 rules/early-return rules/generics rules/laravel rules/legacy rules/mockery-to-prophecy rules/mysql-to-mysqli rules/symfony3 rules/symfony4 rules/symfony5 rules/transform rules/type-declaration rules/visibility

                    - rules/nette-tester-to-phpunit rules/nette-to-symfony rules/nette-utils-code-quality rules/order rules/php-office rules/php-spec-to-phpunit rules/php52 rules/php53 rules/php54 rules/php55 rules/php56 rules/php70 rules/php71 rules/php72 rules/php73 rules/php74 rules/php80 rules/phpunit rules/phpunit-symfony rules/privatization rules/psr4 rules/removing rules/removing-static rules/renaming rules/restoration rules/sensio rules/symfony rules/symfony-code-quality rules/symfony-php-config rules/symfony2
                    - utils
                    - packages
                    - src
                    - vendor

        steps:
            -   uses: actions/checkout@v2

            # see https://github.com/shivammathur/setup-php
            -   uses: shivammathur/setup-php@v2
                with:
                    php-version: 7.4
                    coverage: none

            # The Symfony Polyfill libraries are needed
            -   run: composer require symfony/polyfill-php72 symfony/polyfill-php73 symfony/polyfill-php74 symfony/polyfill-php80 --no-install --no-update
            -   run: composer install --no-progress --ansi --no-dev

            # parallel run is needed here, to speed it up
            -   run: bin/rector process ${{ matrix.directories }} --config build/config/config-downgrade.php --ansi --no-progress-bar

    # run tests after split or here?
    run_downgraded_tests:
        runs-on: ubuntu-latest
        needs: downgrade_rector

            # Run all the tests on PHP 7.4 (because JUnit needs PHP 7.3+),
            # but using Rector downgraded to PHP 7.1

        steps:
            -   run: composer install --no-dev
            -   run: vendor/bin/phpunit

#
#            # Avoid Composer v2 platform checks (composer.json requires PHP 7.3+, but below we are running 7.1)
#            -   run: composer config platform-check false
#
#            # Regenerating the autoload files will remove vendor/composer/platform_check.php, otherwise executing bin/rector on 7.1 fails
#            -   run: composer dump-autoload
#
#            -   run: composer install
#
#            # Replace the composer.json file
#            -   run: cp ci/downgrade/composer.json.after ./composer.json
#
#            # Rector without DEV needs phpstan.neon removed
#            -   run: rm phpstan.neon
#            -   run: rm phpstan-for-rector.neon
#
#            # Switch to PHP 7.1 and run PHPStan to analyze the code,
#            # as to make sure no 7.2+ code was left behind (if there is, PHP will throw some error)
#            -   uses: shivammathur/setup-php@v2
#                with:
#                    php-version: 7.1
#                    coverage: none
#
#            # Test the downgraded Rector by running the default set on its own src
#            -   run: bin/rector process rules/downgrade-php70/src
#
#            # Run PHPStan to make sure no PHP 7.2+ code was left behind
#            -   run: vendor/bin/phpstan analyse -c ci/downgrade/phpstan.neon --ansi
#
#            # If we reach here the downgrade works! Then, deploy it to its own repo
#            -   uses: shivammathur/setup-php@v2
#                with:
#                    php-version: 7.4
#                    coverage: none
#
#            # Copy all files for the target repo to rector-downgrade/
#            # Remove the artifact
##            -   run: rm build/rector-php71.zip
#            -   run: rm -R build
#            # Copy all files
#            -   run: rsync -av * rector-downgrade --quiet
#            # Set-up own workflows for target repo
#            -   run: cp -R ci/downgrade/target-repo/. rector-downgrade/
#
#            # publish it to remote repository
#            -
#                uses: symplify/github-action-monorepo-split@master
#                env:
#                    GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
#                with:
#                    package-directory: 'rector-downgrade'
#                    split-repository-organization: 'rectorphp'
#                    split-repository-name: 'rector-php71'
#                    user-name: "kaizen-ci"
#                    user-email: "info@kaizen-ci.org"
