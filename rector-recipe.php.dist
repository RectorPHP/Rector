<?php

declare(strict_types=1);

use PhpParser\Node\Expr\MethodCall;
use Rector\Core\Configuration\Option;
use Rector\RectorGenerator\ValueObject\RecipeOption;
use Symfony\Component\DependencyInjection\Loader\Configurator\ContainerConfigurator;

// run "bin/rector generate" to create a new Rector + tests from this config
return static function (ContainerConfigurator $containerConfigurator): void {
    $parameters = $containerConfigurator->parameters();

    $parameters->set(Option::RECTOR_RECIPE, [
        // what category the package belongs to
        RecipeOption::PACKAGE => 'Nette',

        // name the rule, what it does, in a something to something else
        RecipeOption::NAME => 'TranslateClassMethodToVariadicsRector',

        // basically content of "getNodeTypes()"
        RecipeOption::NODE_TYPES => [
            MethodCall::class,
        ],
        RecipeOption::DESCRIPTION => 'Rename $name variable to $fullname',
        RecipeOption::CODE_BEFORE => <<<'CODE_SAMPLE'
<?php

final class SomeClass
{
    public function run()
    {
        return $name;
    }
}
CODE_SAMPLE,
        RecipeOption::CODE_AFTER => <<<'CODE_SAMPLE'
<?php

final class SomeClass
{
    public function run()
    {
        return $fullname;
    }
}
CODE_SAMPLE,
        // e.g. link to RFC or headline in upgrade guide, 1 or more in the list
        RecipeOption::SOURCE => [
            'https://github.com/nette/utils/pull/178'
        ],

        // OPTIONAL ↓

        // e.g. symfony30, target set to add this Rule to
        RecipeOption::SET => null,

        // only when configured
        RecipeOption::RULE_CONFIGURATION => null,

        // VERY OPTIONAL ↓ only when configured
        RecipeOption::EXTRA_FILE_NAME => null,
        RecipeOption::EXTRA_FILE_CONTENT => null,
    ]);
};
