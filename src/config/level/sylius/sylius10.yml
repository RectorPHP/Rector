# source: https://github.com/Sylius/Sylius/blob/master/UPGRADE-1.0.md#upgrade-from-100-beta3-to-100

services:
    Rector\Rector\Contrib\Sylius\Review\ReplaceCreateMethodWithoutReviewerRector: ~

    Rector\Rector\Dynamic\MethodNameReplacerRector:
            $perClassOldToNewMethods:
                'Sylius\Component\Core\Repository\OrderRepositoryInterface':
                    'count': 'countPlacedOrders'
                    'countByChannel': 'countFulfilledByChannel'

                'Sylius\Component\Product\Repository\ProductVariantRepositoryInterface':
                    'findByCodeAndProductCode': 'findByCodesAndProductCode'

                'Sylius\Component\Core\Model\OrderInterface':
                      getLastNewPayment: 'getLastPayment'

                'Sylius\Component\Taxonomy\Model\TaxonInterface':
                    'getParents ': 'getAncestors'

    Rector\Rector\Dynamic\ParentTypehintedArgumentRector:
        $typehintForArgumentByMethodAndClass:
            # Constructor of Sylius\Bundle\CoreBundle\Context\SessionAndChannelBasedCartContext has been changed to use Sylius\Component\Core\Storage\CartStorageInterface
            'Sylius\Bundle\CoreBundle\Context\SessionAndChannelBasedCartContext':
                '__construct':
                    '$cartStorage': 'Sylius\Component\Core\Storage\CartStorageInterface'

   Rector\Rector\Dynamic\ReturnTypehintRector:
        $returnTypehintByMethod:
            # OrderInterface::getAdjustmentsRecursively and OrderItemInterface::getAdjustmentsRecursively return types changed from array to Collection
            'Sylius\Component\Order\Model\OrderInterface':
                'getAdjustmentsRecursively':
                    'array': 'Doctrine\Common\Collections\Collection'

            'Sylius\Component\Order\Model\OrderItemInterface':
                'getAdjustmentsRecursively':
                    'array': 'Doctrine\Common\Collections\Collection'

            # PrioritizedServiceRegistryInterface::all method return type changed from Zend's PriorityQueue to iterable
            'Sylius\Component\Registry\PrioritizedServiceRegistryInterface':
                'all':
                    'Zend\Stdlib\PriorityQueue': 'iterable'

    Rector\Rector\Dynamic\ClassReplacerRector:
        $oldToNewClasses:
            'DateTime': 'DateTimeInterface'
            'Sylius\Bundle\CoreBundle\Context\SessionAndChannelBasedCartContext': 'Sylius\Component\Core\Storage\CartStorageInterface'
            'Sylius\Bundle\CoreBundle\EmailManager\ShipmentEmailManager': 'Sylius\Bundle\AdminBundle\EmailManager\ShipmentEmailManager'
            'Sylius\Bundle\CoreBundle\EmailManager\ShipmentEmailManagerInterface': 'Sylius\Bundle\AdminBundle\EmailManager\ShipmentEmailManagerInterface'
            'Sylius\Bundle\CoreBundle\EmailManager\ContactEmailManager': 'Sylius\Bundle\ShopBundle\EmailManager\ContactEmailManager'
            'Sylius\Bundle\CoreBundle\EmailManager\ContactEmailManagerInterface': 'Sylius\Bundle\ShopBundle\EmailManager\ContactEmailManagerInterface'
            'Sylius\Bundle\CoreBundle\EmailManager\OrderEmailManager': 'Sylius\Bundle\ShopBundle\EmailManager\OrderEmailManager'
            'Sylius\Bundle\CoreBundle\EmailManager\OrderEmailManagerInterface': 'Sylius\Bundle\ShopBundle\EmailManager\OrderEmailManagerInterface'
            'Sylius\Bundle\CoreBundle\EventListener\UserMailerListener': 'Sylius\Bundle\ShopBundle\EventListener\UserMailerListener'
            'Sylius\Bundle\CoreBundle\Form\Type\ProductTaxonChoiceType': 'Sylius\Bundle\CoreBundle\Form\Type\Taxon\ProductTaxonAutocompleteChoiceType'
            'Sylius\Component\Order\Factory\AddToCartCommandFactoryInterface': 'Sylius\Bundle\OrderBundle\Factory\AddToCartCommandFactoryInterface'
            'Sylius\Bundle\ResourceBundle\Model\ResourceLogEntry': 'Sylius\Component\Resource\Model\ResourceLogEntry'